name: Deploy
on:
  workflow_run:
    workflows: ["Run Tests"]  # Name of the test workflow
    types:
      - completed
  workflow_dispatch:
    
jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} 
    runs-on: ubuntu-latest
    name: "Deploy to VPS"
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config << END
          Host my-vps
            Hostname $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}
          SSH_USER: ${{ secrets.SSH_USER }}
      - name: Simulate Deployment Failure
        run: |
          echo "Deploying to the server..."
          # Simulate a failure (e.g., non-zero exit code)
          exit 1  # Force failure
      - name: Deploy site
        run: ssh my-vps "cd ${{ secrets.PROJECT_ROOT }} && chmod +x ./redeploy-site.sh && ./redeploy-site.sh"
      - name: Print Out Container Status
        run: ssh my-vps "cd ${{ secrets.PROJECT_ROOT }} && docker compose ps"
      - name: Discord Notification for Successful Deployment
        if: ${{ success() }}
        run: |
          TIMESTAMP=$(TZ="America/Los_Angeles" date +'%Y-%m-%dT%H:%M:%S')
          echo "Timestamp: $TIMESTAMP"

          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
          -H "Content-Type: application/json" \
          -d '{
            "content": "ðŸš€ Deployment Successful",
            "embeds": [{
              "title": "Deployment Status",
              "description": "The deployment was successful."
            }]
          }'
      - name: Discord Notification for Failure Deployment
        if: ${{ failure() }}
        uses: rjstone/discord-webhook-notify@v1
        run: |
          # Capture the error message and logs directly without storing to a file
          TIMESTAMP=$(TZ="America/Los_Angeles" date +'%Y-%m-%dT%H:%M:%S')
          echo "Timestamp: $TIMESTAMP"
          ERROR_MESSAGE="Deployment failed at ${TIMESTAMP}"
          
          ERROR_DETAILS="Workflow step failed: ${{ github.event.workflow_run.name }} - ${{ github.event.workflow_run.conclusion }}"
          echo "Deploy step logs: $ERROR_DETAILS"
          FULL_ERROR="${ERROR_MESSAGE}\nError details:\n${ERROR_DETAILS}"

          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" \
          -H "Content-Type: application/json" \
          -d '{
            "content": "ðŸš¨ Deployment Failed",
            "embeds": [{
              "title": "Deployment Status",
              "description": "$FULL_ERROR"
            }]
          }'

